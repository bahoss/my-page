{"version":3,"sources":["components/Header.jsx","data/index.js","components/About.jsx","components/Portfolio.jsx","components/Contacts.jsx","App.js","serviceWorker.js","index.js","img/ivaleshi.png"],"names":["Header","Menu","pointing","secondary","Item","as","NavLink","exact","to","color","name","Icon","size","Component","age","portfolios","projectName","description","img","ivaleshiImg","stack","githubLink","projectLink","date","About","Card","Image","src","wrapped","ui","Content","data","Meta","className","Description","extra","Portfolio","Group","map","portfolio","href","target","rel","Contacts","header","meta","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a2271969.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <Menu pointing secondary>\n        <Menu.Item as={NavLink} exact to=\"/\" color={\"blue\"} name=\"aboutme\">\n          <Icon size={\"large\"} name=\"address card\" />\n          Обо мне\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/portfolio\" color={\"blue\"} name=\"portfolio\">\n          <Icon size={\"large\"} name=\"suitcase\" />\n          Портфолио\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/contacts\" color={\"blue\"} name=\"contacts\">\n          <Icon size={\"large\"} name=\"handshake outline\" />\n          Контакты\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n","import ivaleshiImg from \"../img/ivaleshi.png\";\n\nexport default {\n  name: \"Баходир Кадыров\",\n  age: \"34 года\",\n  portfolios: [\n    {\n      projectName: \"Ivaleshi\",\n      description: \"Описание\",\n      img: ivaleshiImg,\n      stack: [\"react\", \"redux\", \"redux-saga\"],\n      githubLink: \"https://github.com/1gory/ivaleshi/commits?author=bahoss\",\n      projectLink: \"https://ivaleshi.ru/\",\n      date: \"Июль 2019\"\n    },\n    {\n      projectName: \"Ivaleshi\",\n      description: \"Описание\",\n      img: ivaleshiImg,\n      stack: [\"react\", \"redux\", \"redux-saga\"],\n      githubLink: null,\n      projectLink: null,\n      date: \"Июль 2019\"\n    }\n  ]\n};\n","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport data from \"../data\";\n\nconst About = () => (\n  <Card>\n    <Image\n      src=\"https://react.semantic-ui.com/images/avatar/large/matthew.png\"\n      wrapped\n      ui={false}\n    />\n    <Card.Content>\n      <Card.Header>{data.name}</Card.Header>\n      <Card.Meta>\n        <span className=\"date\">Joined in 2015</span>\n      </Card.Meta>\n      <Card.Description>\n        Matthew is a musician living in Nashville.\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a>\n        <Icon name=\"user\" />\n        22 Friends\n      </a>\n    </Card.Content>\n  </Card>\n);\n\nexport default About;\n","import React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport data from \"../data\";\n\nconst Portfolio = () => (\n  <Card.Group>\n    {data.portfolios.map(portfolio => (\n      <Card color=\"blue\">\n        <Image src={portfolio.img} wrapped ui={false} />\n        <Card.Content>\n          <Card.Header>{portfolio.projectName}</Card.Header>\n          <Card.Meta>{portfolio.date}</Card.Meta>\n          <Card.Description>{portfolio.description}</Card.Description>\n        </Card.Content>\n        {portfolio.projectLink ? (\n          <Card.Content extra>\n            <a\n              href={portfolio.projectLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Icon name=\"desktop\" />\n              Ссылка на проект\n            </a>\n          </Card.Content>\n        ) : (\n          <Card.Content extra>Пока не вышел в продакшен</Card.Content>\n        )}\n        {portfolio.githubLink ? (\n          <Card.Content extra>\n            <a\n              href={portfolio.githubLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Icon name=\"code\" />\n              Ссылка на код\n            </a>\n          </Card.Content>\n        ) : (\n          <Card.Content extra>\n            Репозиторий приватный. По желанию могу сделать скриншоты кода\n          </Card.Content>\n        )}\n      </Card>\n    ))}\n  </Card.Group>\n);\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\n\nconst Contacts = () => (\n  <Card\n    href=\"#card-example-link-card\"\n    header=\"Elliot Baker\"\n    meta=\"Friend\"\n    description=\"Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.\"\n  />\n);\n\nexport default Contacts;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contacts from \"./components/Contacts\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Switch>\n        <Route path=\"/\" exact component={About} />\n\n        <Route path=\"/portfolio\" component={Portfolio} />\n\n        <Route path=\"/contacts\" component={Contacts} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ivaleshi.4301b1ab.png\";"],"sourceRoot":""}